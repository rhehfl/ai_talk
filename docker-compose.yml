version: "3.8"
services:
  db:
    image: postgres:15-alpine # 안정적인 최신 버전 이미지
    restart: always
    environment:
      # NestJS TypeORM 설정에 사용할 환경 변수 (필수)
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_password_secure # ⭐️ 보안을 위해 실제 환경에서는 더 복잡하게 설정하세요!
      POSTGRES_DB: ai_talk_db
    ports:
      - "5432:5432" # 로컬에서 DB 접속이 필요한 경우만 설정
    volumes:
      - postgres_data:/var/lib/postgresql/data # 데이터 영속성을 위한 볼륨
    networks:
      - ai_talk_net
  backend:
    image: ghcr.io/rhehfl/ai_talk:latest
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # ⭐️ 2. 백엔드에서 DB에 접속하기 위한 환경 변수 추가
      - DATABASE_HOST=db # DB 서비스 이름
      - DATABASE_PORT=5432
      - DATABASE_USER=chat_user
      - DATABASE_PASSWORD=chat_password_secure
      - DATABASE_NAME=ai_talk_db
    networks:
      - ai_talk_net
    volumes:
      - ./config/personas.json:/usr/src/app/packages/back/dist/prompt/personas.json:ro

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ai_talk_net

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - ai_talk_net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  redis-data:
  postgres_data:

networks:
  ai_talk_net:
